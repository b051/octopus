// Generated by CoffeeScript 1.6.3
(function() {
  App.SignupView = Parse.View.extend({
    className: 'row-fluid login-wrapper',
    initialize: function() {
      this.user = new Parse.User();
      return this.render();
    },
    template: _.template($('#content-signup').html()),
    render: function() {
      this.$el.html(this.template()).i18n().appendTo($('body'));
      return this;
    },
    events: {
      "submit form": "onSubmit",
      "click .login": "onSubmit"
    },
    alert: function(error) {
      return App.Alert.show(error, this.$('.alert-wrapper').empty());
    },
    onSubmit: function(event) {
      var email, password, password2,
        _this = this;
      event.preventDefault();
      event.stopPropagation();
      email = this.$('input[name=email]').val();
      password2 = this.$('input[name=confirm_password]').val();
      password = this.$('input[name=password]').val();
      if (password2 !== password) {
        return this.alert("<b>Warning!</b> password does not match");
      }
      this.user.set('username', email);
      this.user.set('email', email);
      this.user.set('password', password);
      this.user.set('first_name', this.$('input[name=first_name]').val());
      this.user.set('last_name', this.$('input[name=last_name]').val());
      return this.user.signUp(null, {
        success: function(user) {
          return app.navigate("instruments", true);
        },
        error: function(user, error) {
          return _this.alert("<b>Warning!</b> " + error.message);
        }
      });
    }
  });

  App.LoginView = Parse.View.extend({
    className: 'row-fluid login-wrapper',
    template: _.template($('#content-login').html()),
    initialize: function() {
      this.user = new Parse.User();
      return this.render();
    },
    render: function() {
      this.$el.html(this.template()).appendTo($('body'));
      return this;
    },
    events: {
      "submit form": "onSubmit",
      "click .login": "onSubmit"
    },
    alert: function(error) {
      return App.Alert.show(error, this.$('.alert-wrapper').empty());
    },
    onSubmit: function(event) {
      var _this = this;
      event.stopPropagation();
      event.preventDefault();
      this.user.set('username', this.$('input[name=username]').val());
      this.user.set('password', this.$('input[name=password]').val());
      if (!this.user.isValid()) {
        return $.msgbox(this.user.validationError);
      } else {
        return this.user.logIn({
          success: function(user) {
            return app.navigate("instruments", true);
          },
          error: function(user, error) {
            return _this.alert("<b>Warning!</b> " + error.message);
          }
        });
      }
    }
  });

}).call(this);

/*
//@ sourceMappingURL=login.map
*/
