// Generated by CoffeeScript 1.6.3
(function() {
  App.AccountView = Parse.View.extend({
    className: 'row',
    template: _.template($('#content-account').html()),
    initialize: function(tab) {
      this.tab = tab != null ? tab : 'profile';
      return this.render();
    },
    render: function() {
      this.$el.html(this.template({
        tab: this.tab,
        profile: new App.EditProfileView,
        settings: new App.AccountSettingsView
      }));
      return this;
    },
    events: {
      'submit #edit-profile': 'onSubmit',
      'change input': 'change',
      'click .btn-cancel': 'onCancel'
    },
    change: function(event) {
      return this.attrs[event.target.id] = event.target.value;
    },
    onCancel: function(event) {
      event.preventDefault();
      return app.navigate('', true);
    },
    onSubmit: function(event) {
      var user;
      event.stopPropagation();
      event.preventDefault();
      user = Parse.User.current();
      return user.save(this.attrs, {
        success: function(user) {
          return app.navigate('', true);
        },
        error: function(user, error) {
          return $.msgbox(error.message, {
            type: 'error'
          });
        }
      });
    }
  });

  App.EditProfileView = Parse.View.extend({
    template: _.template($('#form-edit-profile').html()),
    initialize: function() {
      return this.render();
    },
    render: function() {
      this.attrs = Parse.User.current().attributes;
      return this.$el.html(this.template({
        user: this.attrs
      }));
    },
    events: function() {
      return {
        'submit form': 'onSubmit',
        'change input': 'change',
        'click .btn-cancel': 'onCancel'
      };
    },
    change: function(event) {
      return this.attrs[event.target.id] = event.target.value;
    },
    onCancel: function(event) {
      event.stopPropagation();
      event.preventDefault();
      return app.navigate('', true);
    },
    onSubmit: function(event) {
      var user;
      event.preventDefault();
      user = Parse.User.current();
      return user.save(this.attrs, {
        success: function(user) {
          return app.navigate('', true);
        },
        error: function(user, error) {
          return $.msgbox(error.message, {
            type: 'error'
          });
        }
      });
    }
  });

  App.AccountSettingsView = Parse.View.extend({
    template: _.template($('#form-account-settings').html()),
    initialize: function() {
      return this.render();
    },
    render: function() {
      return this.$el.html(this.template());
    }
  });

}).call(this);

/*
//@ sourceMappingURL=profile.map
*/
